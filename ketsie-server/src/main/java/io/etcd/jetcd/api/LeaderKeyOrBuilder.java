// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: election.proto

package io.etcd.jetcd.api;

public interface LeaderKeyOrBuilder extends
    // @@protoc_insertion_point(interface_extends:v3electionpb.LeaderKey)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * name is the election identifier that correponds to the leadership key.
   * </pre>
   *
   * <code>bytes name = 1;</code>
   */
  com.google.protobuf.ByteString getName();

  /**
   * <pre>
   * key is an opaque key representing the ownership of the election. If the key
   * is deleted, then leadership is lost.
   * </pre>
   *
   * <code>bytes key = 2;</code>
   */
  com.google.protobuf.ByteString getKey();

  /**
   * <pre>
   * rev is the creation revision of the key. It can be used to test for ownership
   * of an election during transactions by testing the key's creation revision
   * matches rev.
   * </pre>
   *
   * <code>int64 rev = 3;</code>
   */
  long getRev();

  /**
   * <pre>
   * lease is the lease ID of the election leader.
   * </pre>
   *
   * <code>int64 lease = 4;</code>
   */
  long getLease();
}
